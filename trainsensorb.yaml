esphome:
  name: trainsensorb
  friendly_name: TrainSensorB
  on_boot:
    priority: 600
    then:
      - globals.set:
          id: proximity_threshold
          value: !lambda "return id(proximity_trigger_slider).state;"

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

logger:

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_user
  password: !secret mqtt_password
  discovery: false
  birth_message:
    topic: trainsensorb/status
    payload: online
  will_message:
    topic: trainsensorb/status
    payload: offline

api:
  encryption:
    key: !secret api_key

ota:
  - platform: esphome
    password: !secret ota_password_trainsensorb

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Trainsensorb Fallback Hotspot"
    password: !secret ap_password

captive_portal:

i2c:
  sda: 2
  scl: 1
  scan: true

globals:
  - id: proximity_threshold
    type: float
    initial_value: '0.10'  # Default 10cm (0.10 meters)

light:
  - platform: esp32_rmt_led_strip
    id: status_led
    name: "Status Light"
    pin: 35
    num_leds: 1
    rmt_channel: 0
    chipset: WS2812
    rgb_order: GRB
    internal: true

binary_sensor:
  - platform: gpio
    pin:
      number: 41
      mode: INPUT_PULLUP
      inverted: true
    name: "Button"
    id: atom_button
    on_press:
      - logger.log: "Button pressed"

number:
  - platform: template
    name: "Proximity Trigger Distance"
    id: proximity_trigger_slider
    internal: false
    min_value: 0.01
    max_value: 1.00
    step: 0.01
    unit_of_measurement: "m"
    initial_value: 0.10
    set_action:
      then:
        - globals.set:
            id: proximity_threshold
            value: !lambda "return x;"

sensor:
  - platform: vl53l0x
    name: "Proximity"
    id: distance_sensor
    update_interval: 500ms
    on_value:
      then:
        - lambda: |-
            ESP_LOGD("sensor", "Distance measured: %.2f m", x);
        - if:
            condition:
              lambda: 'return isnan(x);'
            then:
              - light.turn_on:
                  id: status_led
                  red: 0%
                  green: 0%
                  blue: 100%
                  transition_length: 0s
        - if:
            condition:
              lambda: 'return x <= id(proximity_threshold);'
            then:
              - light.turn_on:
                  id: status_led
                  red: 100%
                  green: 0%
                  blue: 0%
                  transition_length: 0s
        - if:
            condition:
              lambda: 'return x > id(proximity_threshold) && x <= 0.50;'
            then:
              - light.turn_on:
                  id: status_led
                  red: 0%
                  green: 100%
                  blue: 0%
                  transition_length: 0s
        - if:
            condition:
              lambda: 'return x > 0.50;'
            then:
              - light.turn_on:
                  id: status_led
                  red: 0%
                  green: 0%
                  blue: 100%
                  transition_length: 0s
interval:
  - interval: 1s
    then:
      - mqtt.publish:
          topic: trainsensorb/heartbeat
          payload: "1"
          retain: false